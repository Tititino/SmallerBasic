#!/usr/bin/sh
# should be POSIX compliant

help() {
  echo "usage:"
  echo "  smallerbasic <filename> [-c <path-to-compiler-jar>] [-r <path-to-runtime>] [-o <output-dir>]"
  echo "  smallerbasic -h"
  echo ""
  echo "options:"
  echo "-c|--compiler"
  echo "  compiler location, overrides default ('APP')"
  echo "-r|--runtime"
  echo "  runtime location, overrides default ('RUNTIME')"
  echo "-o|--output"
  echo "  output directory without trailing slash, overrides default ('.')"
  echo "-h|--help"
  echo "  print this message"
  echo ""
}

# java bin (>= 16)
JAVA="java"
# default location of the compiler
APP="./app/build/libs/app.jar"
# where is the runtime llvm library
RUNTIME="./app/src/main/resources/runtime.ll"
# where all the artifacts will be put
OUTPUT_DIR="."

if [ "$1" = "-h" ] || [ "$1" = "--help" ]
then
	help
	exit 0
fi

BASENAME=$(basename "$1" .sb)
DIRNAME=$(dirname "$1")
shift

while true
do
  case "${1}" in
    -r | --runtime)
      RUNTIME="${2}"
      shift 2
      ;;
    -c | --compiler)
      APP="${2}"
      shift 2
      ;;
    -o | --output)
      OUTPUT_DIR="${2}"
      shift 2
      ;;
    --|'')
      break
      ;;
    *)
      echo "unrecognized option '${1}'"
      help
      exit 1
      ;;
  esac
done

if [ ! -f "$APP" ]
then
  echo "Executable not found, run 'gradle jar'"
  exit 1
fi

if [ ! -f "$RUNTIME" ]
then
  echo "Runtime not found"
  exit 1
fi

if [ ! -d "$OUTPUT_DIR" ]
then
  mkdir -p "$OUTPUT_DIR"
fi

$JAVA -jar "$APP" "$DIRNAME"/"$BASENAME".sb | cat "$RUNTIME" - > "$OUTPUT_DIR"/"$BASENAME".ll
opt -opaque-pointers "$OUTPUT_DIR"/"$BASENAME".ll | llc -opaque-pointers -o "$OUTPUT_DIR"/"$BASENAME".s
clang "$OUTPUT_DIR"/"$BASENAME".s -lm -o "$OUTPUT_DIR"/"$BASENAME"